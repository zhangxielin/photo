---
import { getCollection } from 'astro:content';
import type { CollectionEntry } from 'astro:content';
import Header from '../components/Header.astro';

// 获取所有图片的 Markdown 文件 经过验证，这个排序是有效的。
const photos = await getCollection('gallery');

// 分类处理函数


const getLatestPhotos = (photos: CollectionEntry<'gallery'>[]) => {
  return [...photos].sort((a, b) => 
    new Date(b.data.date).getTime() - new Date(a.data.date).getTime()
  );
};

const sortedPhotos = getLatestPhotos(photos);

const getRandomPhotos = (photos) => {
  return [...photos].sort(() => Math.random() - 0.5);
};

const getFeaturedPhotos = (photos) => {
  return photos.filter((photo) => photo.data.featured === true);
};

// 默认展示“最新”分类的照片 经过验证，这个排序是有效的。
let filteredPhotos = getLatestPhotos(photos);
---

<html lang="zh">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>首页 - 我的摄影作品</title>
    <link rel="stylesheet" href="/global.css" />
  </head>
  <body>
    <Header />
    <main>
      <h1>我的画廊</h1>
      <!-- 切换布局按钮 -->
      <div class="layout-toggle">
        <button data-layout="small">小图模式</button>
        <button data-layout="large">大图模式</button>
      </div>
      <!-- 二级分类导航 -->
      <div class="category-nav">
        <button data-filter="latest">最新</button>
        <button data-filter="random">随机</button>
        <button data-filter="featured">精选</button>
      </div>

      <!-- 展示图片列表 -->
      <div class="photo-list small-layout" id="photo-list">
        {filteredPhotos.map((photo) => (
          <div class="photo-item" key={photo.id}>
            <img src={photo.data.image} alt={photo.data.title} class="photo-thumbnail" />
            <div class="photo-description">
              <h3>{photo.data.title}</h3>
              <p>{photo.data.description}</p>
              <p>{photo.data.date}</p>
            </div>
          </div>
        ))}
      </div>
    </main>

    <footer>
      <p>版权所有 © {new Date().getFullYear()}</p>
    </footer>

    <script define:vars={{ photosJSON: JSON.stringify(photos) }}>
  const photoList = document.getElementById('photo-list');
  const layoutButtons = document.querySelectorAll('.layout-toggle button');
  const filterButtons = document.querySelectorAll('.category-nav button');

  const photos = photosJSON;

  function getLatestPhotos(photos) {
    return [...photos].sort((a, b) => new Date(b.data.date) - new Date(a.data.date));
  }

  function getRandomPhotos(photos) {
    return [...photos].sort(() => Math.random() - 0.5);
  }

  function getFeaturedPhotos(photos) {
    return photos.filter((photo) => photo.data.featured === true);
  }

  function updatePhotoList(photos) {
    photoList.innerHTML = photos.map((photo) => `
      <div class="photo-item">
        <img src="${photo.data.image}" alt="${photo.data.title}" class="photo-thumbnail" />
        <div class="photo-description">
          <h3>${photo.data.title}</h3>
          <p>${photo.data.description}</p>
        </div>
      </div>
    `).join('');
  }

  layoutButtons.forEach((button) => {
    button.addEventListener('click', () => {
      const layout = button.getAttribute('data-layout');
      photoList.className = `photo-list ${layout}-layout`;
    });
  });

  filterButtons.forEach((button) => {
    button.addEventListener('click', () => {
      const filter = button.getAttribute('data-filter');
      let filteredPhotos;
      if (filter === 'latest') {
        filteredPhotos = getLatestPhotos(photos);
      } else if (filter === 'random') {
        filteredPhotos = getRandomPhotos(photos);
      } else if (filter === 'featured') {
        filteredPhotos = getFeaturedPhotos(photos);
      }
      updatePhotoList(filteredPhotos);
    });
  });
</script>
  </body>
</html>